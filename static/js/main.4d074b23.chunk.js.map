{"version":3,"sources":["Assets/RasavadaWork.png","Assets/EstudoWork.png","Assets/XotoWork.png","Components/Body.js","Components/Header.js","Components/Works.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreateBadgePage","React","useState","window","innerWidth","setWidth","useEffect","addEventListener","className","style","display","flex","class","to","process","textDecoration","Header","width","activeStyle","color","Works","worksContainerStyle","src","Estudo","alt","Xoto","ViewMore","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4d074b23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RasavadaWork.ff457974.png\";","module.exports = __webpack_public_path__ + \"static/media/EstudoWork.05003627.png\";","module.exports = __webpack_public_path__ + \"static/media/XotoWork.cc5239a8.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Body.css'\r\n\r\nfunction CreateBadgePage() {\r\n\r\n    const [width, setWidth] = React.useState(window.innerWidth)\r\n    const breakpoint = 800\r\n\r\n\r\n    React.useEffect(() => {\r\n        \r\n        window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    \r\n      }, []);\r\n\r\n      let worksContainerStyle = {flex:\"0.8\"}\r\n\r\n      if(width<breakpoint){\r\n          worksContainerStyle.flex=\"1\"\r\n      }\r\n      \r\n        return (\r\n                <div className=\"body\" >\r\n                    \r\n                    {/* <div className=\"circle\"/> */}\r\n                    {/* <div>\r\n                        <div className=\"heading\">\r\n                            Hi,\r\n                        </div>\r\n                        <div className=\"tagline\">\r\n                            We are doing tech!\r\n                        </div>\r\n                \r\n                     </div> */}\r\n                         <div style={{display: \"flex\"}}>\r\n                            <div className=\"show\" style={{flex:\"1\"}}>\r\n                                    \r\n                                    {/* style={{background:\"rgb(35,65,182)\"}} style={{background:\"#4d529e\"}}*/}\r\n                                    <div class=\"showItem\">\r\n                                        <div className=\"showDetails\">\r\n                                            <h5 className=\"showDescription\">OUR PRIDE</h5>\r\n                                            <h1 className=\"showName\">Get started with Open Badges</h1>\r\n                                            <h5 className=\"showDescription\">New lectures, New appearence, No risk and cwssasa lectures, New appearence, No risk and cw lectures, New appearence, No risk and cw lectures</h5>\r\n                                            <button className=\"getStarted\">Coming soon</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* style={{background:\"rgb(193,8,16)\"}} */}\r\n                                    <div class=\"showItem projects\">\r\n                                        <div className=\"showDetails\">\r\n                                            <h5 className=\"showDescription\">SHOWCASE</h5>\r\n                                            <h1 className=\"showName\">Our most recent digital and strategy projects</h1>\r\n                                            <Link to={`${process.env.PUBLIC_URL}/Works`} style={{textDecoration:'none'}}>\r\n                                                <button className=\"view\">View Projects -&gt;</button>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                         \r\n                        <div style={{display: \"flex\"}}>\r\n                            <div style={{flex:\"1\"}} className=\"cards\">\r\n                                <div class=\"features\">\r\n                                    <h2>\r\n                                        Engage your  customers dramarically.\r\n                                    </h2>\r\n                                    <h5 className=\"fetaureDescription\">New lectures, New appearence, No risk and cwssasa lectures, New appearence, No risk and cw lectures, New appearence, No risk and cw lectures</h5>\r\n                                </div>\r\n                                <div class=\"features\">\r\n                                    <h2>\r\n                                        Engage your  customers dramarically.\r\n                                    </h2>\r\n                                    <h5 className=\"fetaureDescription\">New lectures, New appearence, No risk and cwssasa lectures, New appearence, No risk and cw lectures, New appearence, No risk and cw lectures</h5>\r\n                                </div>\r\n                                <div class=\"features\">\r\n                                    <h2>\r\n                                        Engage your  customers dramarically.\r\n                                    </h2>\r\n                                    <h5 className=\"fetaureDescription\">New lectures, New appearence, No risk and cwssasa lectures, New appearence, No risk and cw lectures, New appearence, No risk and cw lectures</h5>\r\n                                </div>\r\n                                <div class=\"features\">\r\n                                    <h2>\r\n                                        Engage your  customers dramarically.\r\n                                    </h2>\r\n                                    <h5 className=\"fetaureDescription\">New lectures, New appearence, No risk and cwssasa lectures, New appearence, No risk and cw lectures, New appearence, No risk and cw lectures</h5>\r\n                                </div>\r\n                            </div>\r\n                         </div>\r\n                        \r\n                     \r\n\r\n                         \r\n                         \r\n\r\n                        {/* <div style={worksContainerStyle} className=\"cards\">\r\n                                <div class=\"card\">\r\n                                    <center>\r\n                                    <img src={Estudo} alt=\"\" className=\"image\"></img>\r\n                                    </center>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <center>\r\n                                    <img src={Xoto} alt=\"\" className=\"image\"></img>\r\n                                    </center>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <center>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/Works`} style={{textDecoration:'none', boxDecorationBreak:\"none\"}}>\r\n                                        <img src={ViewMore} alt=\"\" className=\"viewMore\"></img>\r\n                                    </NavLink>\r\n                                    </center>\r\n                                </div>\r\n                            </div> */}\r\n                     \r\n                        \r\n                </div>\r\n        )\r\n}\r\n\r\nexport default CreateBadgePage\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n\r\n    const [width, setWidth] = React.useState(window.innerWidth)\r\n    const breakpoint = 800\r\n\r\n\r\n    React.useEffect(() => {\r\n        \r\n        window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    \r\n      }, []);\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <div className=\"nav\">\r\n                <div style={{flex:\"1\"}}>\r\n                    <NavLink to={`${process.env.PUBLIC_URL}/`} activeStyle={{color:\"white\"}} style={{textDecoration:'none'}}>\r\n                        Epoch{width<=breakpoint && <br/>} Zero\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={`${process.env.PUBLIC_URL}/Works`} className=\"link\" activeStyle={{color:\"#6823ff\"}} style={{textDecoration:'none'}}>works</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={`${process.env.PUBLIC_URL}/Team`} className=\"link\" activeStyle={{color:\"#6823ff\"}} style={{textDecoration:'none'}}>team</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={`${process.env.PUBLIC_URL}/Contact`} className=\"link\" activeStyle={{color:\"#6823ff\"}} style={{textDecoration:'none'}}>contact</NavLink>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport ViewMore from \"../Assets/RasavadaWork.png\"\r\nimport Estudo from \"../Assets/EstudoWork.png\"\r\nimport Xoto from \"../Assets/XotoWork.png\"\r\nimport './Works.css'\r\nimport './Body.css'\r\n\r\nfunction Works() {\r\n    \r\n    const [width, setWidth] = React.useState(window.innerWidth)\r\n    const breakpoint = 1000\r\n\r\n    React.useEffect(() => {\r\n        \r\n        window.addEventListener(\"resize\", () => setWidth(window.innerWidth));\r\n    \r\n      }, []);\r\n\r\n      let worksContainerStyle = {flex:\"0.8\"}\r\n\r\n      if(width<breakpoint){\r\n          worksContainerStyle.flex=\"1\"\r\n      }\r\n      \r\n    return (\r\n        <div className=\"works\">\r\n            { width>breakpoint &&\r\n            <div className=\"spacing\">\r\n            </div>\r\n            }\r\n            <div style={worksContainerStyle} className=\"cards\">\r\n            <div class=\"card\">\r\n                                    <center>\r\n                                    <img src={Estudo} alt=\"\" className=\"imageWork\"></img>\r\n                                    </center>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <center>\r\n                                    <img src={Xoto} alt=\"\" className=\"imageWork\"></img>\r\n                                    </center>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <center>\r\n                                    <img src={ViewMore} alt=\"\" className=\"imageWork\"></img>\r\n                                    </center>\r\n                                </div>\r\n                            </div>\r\n            { width>breakpoint &&\r\n            <div className=\"spacing\">\r\n            </div>\r\n            }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Works\r\n","import React from 'react';\nimport Body from './Components/Body'\nimport Header from './Components/Header'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './App.css';\nimport Works from './Components/Works';\n\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Header/>\n        <Route exact path={`${process.env.PUBLIC_URL}/`}>\n          <Body/>\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/Works`}>\n          <Works/>\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/Contact`}>\n          <Body/>\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/Team`}>\n          <Body/>\n        </Route>\n        </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}